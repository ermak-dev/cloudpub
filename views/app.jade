h1 Apps
// Put controls into this div
.page
    .loading

a.btn.primary.startup-new(href="#") Install App

.popover
    ol
        li a folder on servers that containing a program described by a package.json file
        li a gzipped tarball containing (1)
        li a url that resolves to (2)
        li a [name]@[version] that is published on the registry with (3)
        li a [name]@[tag] that points to (4)
        li a [name] that has a "latest" tag satisfying (5)
        li a git url that, when cloned, results in (1).

// Module script
!= js('/js/app.js')

// Below is client-side _.templates (use <% %> and other identation!)
// Items list
script.list-template(type="text/template")
    table.bordered-table.zebra-striped
        thead
            tr
                th.state App
                th.domain Domain
                th.worker Services
                th.control &nbsp; 
        tbody
            <% _.each(items, function(item) { %>
            tr
                td.state
                    .state-icon
                        a(href="#", title="<%=item.state%>: <%=item.message%>")
                            img(src="state-<%=item.state%>.png")
                            .state-hole <%= item.children && item.children.length || 0 %>
                    .state-info
                        h3 <%=item.source%>
                        span <%= item.message %> 
                td.domain
                    h3
                        a(href="http://<%= item.domain %>",target="_new") <%=item.domain%>
                td.worker
                    ul.state-list
                        <% _.each(item._children, function(child) { %>
                        li
                            .state-icon-small
                                img(src="state-<%=child.state%>.png")
                            .state-info-small <%= child.message %>
                        <% }); %>
                td.control
                    <% if(item.state != "up") { %>
                    img.btn.command(src="command-start.png",data-id="<%=item.id%>",data-command="startup")
                    <% } %>
                    img.btn.command(src="command-stop.png",data-id="<%=item.id%>",data-command="shutdown")
            <% }); %>

// Instances list
script.instances-template(type="text/template")
    ul.state-list
        <%  if(_.isEmpty(items)) { %>
        input.required(type="hidden",name="instance")
        li
            a.important(href="/instance") Click here to add server first
        <% } %>
        <% _.each(items, function(item) { %>
        li
            .state-icon-small
                img(src="state-<%=item.state%>.png")
                input.required(id="<%= item.id %>",type="checkbox",name="instance",value="<%= item.id %>",checked="true")
            .state-info-small
                label.instance-address(for="<%= item.id %>") &nbsp;<%= item.address %>
        <% }); %>

  
// Start dialog
script.startup-template(type="text/template")
    .startup.modal.hide.fade
        .modal-header
            a.close(href="#") × 
            h3 Start App
        form.modal-body
            ul.tabs
                li.active
                    a(href="#settings")  Settings
                li
                    a(href="#servers") Servers
            .pill-content
                #settings.active
                    .clearfix
                        label Source
                        .input
                            input.required.urlpopover(type="text",name="source",value="<%= item.source%>")
                            span.help-block
                                span Provide name or URL of the &nbsp;
                                a(href="http://npmjs.org/", target="new",rel='twipsy',title='Node.js package manager') npm
                                span &nbsp;compatible package that containing a&nbsp;
                                a(href="http://npmjs.org/doc/json.html", target="new", rel='twipsy',title='File containing app configuration and dependencies') package.json
                                span &nbsp;manifest.
                    .clearfix
                        label Domain Name
                        .input
                            input.required.domain(type="text",name="domain",value="<%= item.domain%>")
                            span.help-block
                                div Select domain name for this app.
                                div Use [Your Domain].cloudpub.us or enter your domain name and point it to master server.
                #servers
                    .clearfix
                        label Server to run
                        .input
                            #items
                            span.help-block
                                span Select server(s) to run app
                                div If multiple servers selected, round-robin HTTP load balancing will be performed.
                                div Use servers in UP (green) state to avoid errors.
        .modal-footer
            a.btn.primary.execute(href="#") Start App
            a.btn.secondary.cancel(href="#") Cancel

// Stop dialog
script.shutdown-template(type="text/template")
    .modal.hide.fade
        .modal-header
            a.close(href="#") × 
            h3 Stop App
        form.modal-body
            .clearfix
                label App Data
                .input
                    ul.inputs-list
                        li
                            label
                                input(type="radio", checked="true", name="data", value="keep")
                                b Keep app data
                                span.help-block You can restart app later
                        li
                            label
                                input(type="radio", name="data", value="delete")
                                span.red Uninstall app
                                span.help-block This cannot be undone! Use this with caution.
        .modal-footer
            a.btn.primary.execute(href="#") Stop App
            a.btn.secondary.cancel(href="#") Cancel

